version: '3.9'

services:
    otel-collector:
        image: otel/opentelemetry-collector-contrib:0.82.0
        restart: always
        command:
            - --config=/etc/otelcol-contrib/otel-collector.yml
        volumes:
            - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
            - /srv/services/otel/data:/otel/data
        networks:
            - backend-network
        depends_on:
            - jaeger-all-in-one

    prometheus:
        container_name: prometheus
        image: prom/prometheus
        restart: always
        command:
            - --config.file=/etc/prometheus/prometheus.yml
        volumes:
            - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - /srv/services/prometheus:/prometheus
        ports:
            - "9090:9090"
        networks:
            - backend-network

    grafana:
        container_name: grafana
        image: grafana/grafana
        restart: always
        ports:
            - "3003:3000"
        volumes:
            - /srv/services/grafana/data:/var/lib/grafana

    jaeger-all-in-one:
        image: jaegertracing/all-in-one:latest
        restart: always
        ports:
            - "16686:16686"
            - "14268"
            - "14250"
        volumes:
            - /srv/services/jaeger/data:/badger

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.16.4
        container_name: elasticsearch
        restart: always
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false
            - xpack.security.transport.ssl.enabled=false
            - xpack.security.http.ssl.enabled=false
        ports:
            - "9200:9200"
            - "9300:9300"
        volumes:
            - /srv/services/elasticsearch/data:/usr/share/elasticsearch/data
        networks:
            - elastic
        ulimits:
            memlock:
                soft: -1
                hard: -1
        deploy:
            resources:
                limits:
                    memory: 2G

    logstash:
        image: logstash:8.16.4
        container_name: logstash
        restart: always
        ports:
            - "5600:5600"
            - "9600:9600"
        environment:
            - ELASTICSEARCH_HOST=http://elasticsearch:9200
            - XPACK_MONITORING_ENABLED=true
        volumes:
            - ./docker/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
            - /srv/services/logstash/data:/usr/share/logstash/data
        depends_on:
            - elasticsearch
        networks:
            - elastic

    kibana:
        image: docker.elastic.co/kibana/kibana:8.16.4
        container_name: kibana
        restart: always
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
            - xpack.security.enabled=false
            - xpack.security.transport.ssl.enabled=false
        ports:
            - "5601:5601"
        networks:
            - elastic
        depends_on:
            - elasticsearch
        volumes:
            - /srv/services/kibana/data:/usr/share/kibana/data

    # Optional: Add MinIO here if you want to run it alongside
    # minio:
    #   image: quay.io/minio/minio:RELEASE.2025-04-22T22-12-26Z
    #   container_name: minio
    #   environment:
    #     MINIO_ROOT_USER: "minioadmin"
    #     MINIO_ROOT_PASSWORD: "minioadmin"
    #   volumes:
    #     - /srv/services/minio/data:/data
    #     - /srv/services/minio/config:/root/.minio
    #   ports:
    #     - "8000:9000"
    #     - "9001:9001"
    #   command: server /data --console-address :9001
    #   restart: unless-stopped
    #   healthcheck:
    #     test: ["CMD", "curl", "-f", "http://localhost:8000/minio/health/live"]
    #     interval: 30s
    #     timeout: 10s
    #     retries: 3

volumes:
    elasticsearch-data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /srv/services/elasticsearch/data

networks:
    backend-network:
        driver: bridge
    elastic:
        driver: bridge
